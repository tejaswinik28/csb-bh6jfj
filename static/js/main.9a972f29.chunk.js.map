{"version":3,"sources":["seasons.js","spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","seasons","props","lat","month","season","Date","getMonth","className","spinner","Elem","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","rootElement","document","getElementById","createRoot","render"],"mappings":"oKAEMA,EAAe,CACnBC,OAAQ,CACNC,KAAM,qBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,WACNC,SAAU,cAwBCE,EAbC,SAACC,GACf,IARiBC,EAAKC,EAQhBC,GARWF,EAQQD,EAAMC,KARTC,GAQc,IAAIE,MAAOC,YAPnC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAK9B,EAA2BP,EAAaS,GAAhCP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAEd,OACE,gCACE,mBAAGS,UAAS,mBAAcT,EAAd,WACZ,6BAAKD,IACL,mBAAGU,UAAS,mBAAcT,EAAd,eClBHU,EARC,WACd,OACE,qBAAKD,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAf,2BCAAE,E,4MACJC,MAAQ,CAAER,IAAK,KAAMS,aAAc,I,uDAEnC,WAAqB,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEf,IAAKc,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAc,qC,oBAI3C,WACE,OAAIU,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMR,IAClC,cAAC,EAAD,KAGJmB,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMR,IAClC,cAAC,EAAD,CAASA,IAAKmB,KAAKX,MAAMR,MAG3B,cAAC,EAAD,Q,GAnBQoB,IAAMC,WAuBnBC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.9a972f29.chunk.js","sourcesContent":["import { React } from \"react\";\r\n\r\nconst seasonConfig = {\r\n  summer: {\r\n    text: \"Lets hit the beach\",\r\n    iconName: \"sun\"\r\n  },\r\n  winter: {\r\n    text: \"Its Cold\",\r\n    iconName: \"snowFlake\"\r\n  }\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && month < 9) {\r\n    return lat > 0 ? \"summer\" : \"winter\";\r\n  } else {\r\n    return lat > 0 ? \"winter\" : \"summer\";\r\n  }\r\n};\r\nconst seasons = (props) => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n\r\n  return (\r\n    <div>\r\n      <i className={` massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={` massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default seasons;\r\n","import React from \"react\";\r\n\r\nconst spinner = () => {\r\n  return (\r\n    <div className=\"ui active dimmer\">\r\n      <div className=\"ui text loader\">Loading...</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default spinner;\r\n","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport Seasons from \"./seasons\";\nimport Spinner from \"./spinner\";\n\nclass Elem extends React.Component {\n  state = { lat: null, errorMessage: \"\" };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => this.setState({ lat: position.coords.latitude }),\n      (err) => this.setState({ errorMessage: \"Something went wrong !!!!!!\" })\n    );\n  }\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <Spinner />;\n      //return <div>Error : {this.state.errorMessage}</div>;\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      return <Seasons lat={this.state.lat} />;\n    }\n\n    return <Spinner />;\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Elem />\n  </StrictMode>\n);\n"],"sourceRoot":""}